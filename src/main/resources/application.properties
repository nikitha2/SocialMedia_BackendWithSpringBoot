
#Loggin what level we want. Logging max to min->
#trace - will show logs for trace, debug, info, warning, error.
#debug - will show logs for debug, info, warning, error.
#info - will show logs for info, warning, error.
#warning - warning, error.
#error - error.
#off - turn logging off
#logging.level.org.springframework = debug
 
#Actuator
#management.endpoints.web.exposure.include=*

#------------ H2 database -----------
#enables console
#spring.h2.console.enabled=true 
# Sets custom url 
#spring.datasource.url=jdbc:h2:mem:testdb

# To see sqls in console
spring.jpa.show-sql = true



#------------MySql database configs------------
# Dockkercommand to run mySql image and create a container
#docker run 
#--detach 
#--env MYSQL_ROOT_PASSWORD=dummypassword 
#--env MYSQL_USER=social-media-user 
#--env MYSQL_PASSWORD=dummypassword 
#--env MYSQL_DATABASE=social-media-database
#--name mysql 
#--publish 3306:3306 
#mysql:8-oracle

# To connect application to mySql DB in c=docker container mysql. Point datasourse to container.
spring.datasource.url=jdbc:mysql://localhost:3306/social-media-database
spring.datasource.username=social-media-user
spring.datasource.password=dummypassword
# When using h2 DB spring auto-configuration wll create tabled. But we need below line to make database schema to work for mySql
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

#sqlsh command to connect to myswl db
#\connect social-media-user@localhost:3306



